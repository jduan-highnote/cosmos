buildscript {
    ext.kotlin_version = '1.3.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    // run "./gradlew dokka" to generate HTML docs
    id "org.jetbrains.dokka" version "0.9.17"
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

apply plugin: 'kotlin'
apply plugin: 'application'

// Note that the Kotlin compiler will create a class based on the "main" function.
// So if the filename that contains the "main" func is called HelloWorld.kt,
// the class will be named "HelloWorldKt".
// See https://discuss.kotlinlang.org/t/no-class-just-fun-main/5147
mainClassName = 'jduan.main.MainKt'

defaultTasks 'run'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-script-runtime:1.2.71'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.1.1'
    compile 'org.kohsuke:github-api:1.95'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8'
    compile 'com.squareup.okhttp3:okhttp:3.11.0'
    compile 'com.squareup.okhttp3:okhttp-sse:3.11.0'
    compile 'io.reactivex.rxjava2:rxjava:2.2.0'
    compile 'org.eclipse.jgit:org.eclipse.jgit:5.2.1.201812262042-r'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit:1.3.10'
    testImplementation 'junit:junit:4.11'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
}

// Output to build/libs/shadow.jar
shadowJar {
    baseName = 'shadow'
    classifier = null
    version = null
}

//task wrapper(type: Wrapper) {
//    gradleVersion = "4.10.2"
//}

test {
    filter {
        // To ignore tests that have spaces in their names, just use spaces.
        excludeTest 'HelloWorldTest', 'hello world'
    }
}
